from aiogram import F, Router
from aiogram.enums import ParseMode
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import CommandStart, Filter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, ReplyKeyboardMarkup, \
    KeyboardButton

from db.query import add_user, get_user
from utils.create_url import Payment
from utils.vpn import MyClassOutlineVpn

router = Router()


class MainState(StatesGroup):
    support = State()


class Reg(Filter):
    async def __call__(self, message: Message) -> bool:
        if not await get_user(message.chat.id):
            await message.answer('–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ /start!')
            return False
        return True


@router.message(CommandStart())
async def cmd_start(message: Message) -> None:
    await add_user(message.chat.id, message.chat.username)

    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á", callback_data="get_key")],
            [InlineKeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="instruction"),
             InlineKeyboardButton(text="–¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")],
            [InlineKeyboardButton(text="–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ", callback_data="donation")]
        ]
    )

    try:
        await message.edit_text(
            'üëã–†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! \n\n\n '
            'üöÄ–ò–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è OutlineVpn. \n'
            'üñ•Ô∏èOutlineVpn –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ, —Ç–∞–∫ –∏ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ.  \n\n\n'
            'üåçOutlineVpn –Ω–∞–¥–µ–∂–Ω—ã–π –∏ –∏–º–µ–µ—Ç –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã—Ö–æ–¥–∏—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∞–π—Ç—ã –≤ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ. \n'
            '‚¨áÔ∏è–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ - *–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á*‚¨áÔ∏è',
            reply_markup=markup)
    except TelegramBadRequest:
        await message.answer('üëã–†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! \n\n\n '
                             'üöÄ–ò–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è OutlineVpn. \n'
                             'üñ•Ô∏èOutlineVpn –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ, —Ç–∞–∫ –∏ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ.  \n\n\n'
                             'üåçOutlineVpn –Ω–∞–¥–µ–∂–Ω—ã–π –∏ –∏–º–µ–µ—Ç –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã—Ö–æ–¥–∏—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∞–π—Ç—ã –≤ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–µ. \n'
                             '‚¨áÔ∏è–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ - *–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á*‚¨áÔ∏è', reply_markup=markup)


@router.callback_query(F.data.in_({"get_key", "instruction", "support", "back_menu", "donation"}))
async def click(callback: CallbackQuery, state: FSMContext) -> None:
    if callback.data == "back_menu":
        return await cmd_start(callback.message)

    if callback.data == 'get_key':
        markup = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="instruction")],
                [InlineKeyboardButton(text="‚è™–ù–∞–∑–∞–¥", callback_data="back_menu")]
            ]
        )

        loading_message = await callback.message.edit_text('–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∑–∞–≥—Ä—É–∑–∫–∞...')

        async with MyClassOutlineVpn() as sess:
            if key := await sess.one_key_info(callback.message.chat.id):
                access_url = key[1]
            else:
                access_url = await sess.create_new_key(callback.message.chat.id)

            await loading_message.edit_text(
                text=f'üîë–í–æ—Ç –≤–∞—à –∫–ª—é—á —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–µ–±–µ –≤–ø–Ω.\n '
                     f'–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ, —Ç–æ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –æ–±—Ä–∞—Ç–Ω–æ –∏ –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é : `{access_url}`',

                parse_mode=ParseMode.MARKDOWN,
                reply_markup=markup
            )

    if callback.data == "instruction":
        markup = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text="‚è™–ù–∞–∑–∞–¥", callback_data="back_menu")]])
        await callback.message.edit_text("üëã–ü—Ä–∏–≤–µ—Ç! \n\n –¢—ã –Ω–µ –∑–Ω–∞–µ—à—å –∫–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Å–µ–±–µ OutlineVpn? –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤ —ç—Ç–æ–º. \n "
                                         "1.üì§–ù—É–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ OutlineVpn –≤ Google Play Market. \n"
                                         "2.üîë–í –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Vpn.\n"
                                         "3.‚ñ∂Ô∏è–ó–∞—Ö–æ–¥–∏—Ç–µ –≤ OutlineVpn –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∫–ª—é—á –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –¥–∞–ª –±–æ—Ç. \n"
                                         "4.üíü–ü–æ–ª—å–∑—É–µ—Ç–µ—Å—å –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ –≤–ø–Ω–æ–º –±–µ–∑ –∫–∞–∫–æ–π –ª–∏–±–æ —Ä–µ–∫–ª–∞–º—ã!", reply_markup=markup)


    if callback.data == "support":
        markup = ReplyKeyboardMarkup(
            resize_keyboard=True,
            keyboard=[[KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞ ")]],
            one_time_keyboard=True
        )
        await callback.message.delete()
        await callback.message.answer("–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ", reply_markup=markup)
        await state.set_state(MainState.support)

    if callback.data == 'donation':
        markup = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="50 ‚ÇΩ", url=Payment(sum=50).create_url)],
                [InlineKeyboardButton(text="100 ‚ÇΩ", url=Payment(sum=100).create_url)],
                [InlineKeyboardButton(text="250 ‚ÇΩ", url=Payment(sum=250).create_url)],
                [InlineKeyboardButton(text="500 ‚ÇΩ", url=Payment(sum=500).create_url)],
                [InlineKeyboardButton(text="‚è™–ù–∞–∑–∞–¥", callback_data="back_menu")]
            ]
        )
        await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.", reply_markup=markup)

    return None
